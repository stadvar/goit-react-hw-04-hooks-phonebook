{"version":3,"sources":["components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["ContactList","contacts","onDeleteContact","className","map","name","number","id","type","onClick","ContactForm","onSubmit","useState","setName","setNumber","handleInputChange","e","currentTarget","value","preventDefault","trim","alert","onChange","Filter","onFilter","shortid","require","App","setContacts","filter","setFilter","useEffect","localContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","search","find","el","toLowerCase","newContact","generate","prevState","normalizedFilter","contact","includes","getContactList","filtered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ac3db65.chunk.js","sourcesContent":["import './ContactList.css';\nimport PropTypes from 'prop-types';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <table className=\"List-table\">\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                del\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { useState } from 'react';\nimport './ContactForm.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      alert('Fill all fields!');\n      return;\n    }\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label className=\"Form-label\">\n        Name\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className=\"Form-label\">\n        Number\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","// import data from '../../data.json';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nconst shortid = require('shortid');\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const handleFilter = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n  useEffect(() => {\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localContacts) {\n      setContacts(localContacts);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = data => {\n    const search = contacts.find(\n      el => el.name.toLowerCase() === data.name.toLowerCase(),\n    );\n    if (search) {\n      alert(`${search.name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      ...data,\n      id: shortid.generate(),\n    };\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const getContactList = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const onDeleteContact = id => {\n    setContacts(prevState => {\n      const filtered = prevState.filter(el => el.id !== id);\n      return [...filtered];\n    });\n  };\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n      <h2>Contacts</h2>\n      <p className=\"App-find\">Find contacts by name</p>\n      <Filter value={filter} onFilter={handleFilter} />\n      <ContactList\n        contacts={getContactList()}\n        onDeleteContact={onDeleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}